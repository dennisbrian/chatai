version: '3.8'

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/realchar
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/status"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./client/next-web/
      dockerfile: Dockerfile.dev
      args:
        NEXT_PUBLIC_FIREBASE_API_KEY: AIzaSyD341ARauNJgfFVUEeBbBkcdmbALCRRHbE
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: chatbot-cca07.firebaseapp.com
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: chatbot-cca07
        NEXT_PUBLIC_FIREBASE_APP_ID: 1:810305965770:web:a96f07a585c59bb99bee33
        REACT_APP_BUILD_NUMBER: 0.0.1
        NEXT_PUBLIC_API_HOST: http://localhost:8000
        API_HOST: http://backend:8000
    ports:
      - "3001:3000"
    depends_on:
      backend:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyD341ARauNJgfFVUEeBbBkcdmbALCRRHbE
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=chatbot-cca07.firebaseapp.com
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=chatbot-cca07
      - NEXT_PUBLIC_FIREBASE_APP_ID=1:810305965770:web:a96f07a585c59bb99bee33
      - REACT_APP_BUILD_NUMBER=0.0.1
      - NEXT_PUBLIC_API_HOST=http://localhost:8000
      - API_HOST=http://backend:8000

networks:
  default:
    driver: bridge

volumes:
  db:
    driver: local
